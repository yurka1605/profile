!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){},function(e,t,n){"use strict";n.r(t);n(0);var r=window.navigator.userAgent.toLowerCase(),a=document.querySelector(".wrapper"),o=document.querySelector("#mainNavigation"),i=document.querySelectorAll(".mainTab"),c=document.querySelectorAll(".profileTabBlock"),s=document.querySelector(".imageUser img"),l=document.querySelector(".fullNameUser"),u=document.querySelector("#mainInfo .userLocation"),f=document.querySelector(".valueHaracteristic .valueFamily"),d=document.querySelector(".valueHaracteristic .valuePhoneNumber"),m=document.querySelector(".valueHaracteristic .valueEmail"),y=document.querySelector(".userHobby"),p=document.querySelector(".friendsUser"),g={city:"undefined",fullName:"undefined undefined",hobby:[],info:{family:"undefined",phone:"+7 (***) *** ** **",email:"undefined@undefined.ru"},picture:"./assets/UserPic.png"},h=document.querySelector(".overlay"),v=document.querySelector(".spinner"),b=document.querySelector(".hobbiesControl"),S=document.querySelector(".popupAddHobby"),N=document.querySelector(".closePopup"),L=document.querySelector(".addHobby"),q=document.querySelector(".fieldEnterHobby"),E=document.getElementsByClassName("hobby"),I=document.querySelector(".mainInfoUser"),O=document.querySelector(".infoMessage"),T=function(e){var t=this;P(e,"danger"),this.renderDataUsers(),setTimeout(function(){P("Не удалось получить данные","danger"),t.getDataUser(t.url)},6e4)},U=function(e,t){var n=document.createElement("div");n.className="hobby",n.innerHTML=e,"after"===t?y.appendChild(n):y.insertBefore(n,y.firstChild)},w=function(e){"0"===e?(i[0].classList.remove("currentTab"),i[1].classList.add("currentTab"),c[0].style.display="flex",c[1].style.display="none"):(i[1].classList.remove("currentTab"),i[0].classList.add("currentTab"),c[1].style.display="flex",c[0].style.display="none"),sessionStorage.setItem("tabId",e)},A=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";"closePopup"===e.target.className||"close"===t?(S.classList.remove("openPopup"),a.classList.remove("filter"),h.style.display="none"):(S.classList.add("openPopup"),a.classList.add("filter"),h.style.display="block")},H=function(e,t){var n=e.split("."),r=document.querySelector(".".concat(t.target.className)),a=JSON.parse(localStorage.getItem("profile"));r.addEventListener("change",function(){localStorage.setItem("profile",JSON.stringify(a))}),r.addEventListener("input",function(){"fullName"===e?a["".concat(n[0])]=k(r,/[^A-Za-zА-Яа-я\s]/g,e,"Имя может состоять только из букв!"):"info.phone"===e?a["".concat(n[0])]["".concat(n[1])]=k(r,/[^0-9\s()+]/g,e,"Телефон не может состоять из букв!"):"info.email"===e?a["".concat(n[0])]["".concat(n[1])]=k(r,/@/g,e,"Отсутствует @!"):n.length>1?a["".concat(n[0])]["".concat(n[1])]=k(r,/[^A-Za-zА-Яа-я]/g,e,"Любые сиволы кроме буквенных недопустимы!"):a["".concat(n[0])]=k(r,/[^A-Za-zА-Яа-я\s\-]/g,e,"Любые сиволы кроме буквенных недопустимы!")})},P=function(e,t){O.innerHTML=e,O.classList.add("".concat(t)),setTimeout(function(){O.classList.remove("".concat(t))},2e3)},k=function(e,t,n,r){if("info.email"===n?t.test(e.value):!t.test(e.value))return"fullName"===n&&(s.title=s.alt=e.value),e.value.trim();"info.email"!==n&&(e.value=e.value.replace(t,"")),P("".concat(r),"danger")};function J(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}new(function(){function e(t,n,r){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._state=t,this.url=n,this.tab=a,this.currentUserAgent=/msie 10/i.test(r)||/net/i.test(r)}var t,n,r;return t=e,(n=[{key:"init",value:function(){var e=this;null===this.userProfile?(sessionStorage.setItem("tabId",this.tab),this.getDataUser()):this.renderDataUsers.apply(this,J(this.userProfile)),o.addEventListener("click",function(t){!0!==e.currentUserAgent?w(t.target.dataset.tabId):w(t.target.getAttribute("data-tab-id"))}),b.addEventListener("click",function(e){return A(e)}),N.addEventListener("click",function(e){return A(e)}),q.addEventListener("input",function(e){k(e.target,/[^A-Za-zА-Яа-я\s\-]/g,"","Телефон не может состоять из букв!")}),L.addEventListener("click",function(e){var t=q.value.toLowerCase();""!==t.trim()?function(e,t){var n=JSON.parse(localStorage.getItem("hobby")),r=0;n.forEach(function(t){e===t&&r++}),0===r?(n.splice(0,0,e),localStorage.setItem("hobby",JSON.stringify(n)),U(e,"before"),q.value="",A(t,"close"),P("".concat(e," успешно добавлен в список ваших интересов"),"access")):P("Hobby with this name already exists","danger")}(t,e):P("Enter name hobby","danger")}),y.addEventListener("click",function(e){"userHobby"!==e.target.className&&function(e){for(var t=JSON.parse(localStorage.getItem("hobby")),n=0;n<E.length;n++)E[n].innerHTML===e&&(y.removeChild(E[n]),t.splice(n,1));localStorage.setItem("hobby",JSON.stringify(t)),P("".concat(e," успешно удален из списка интересов"),"access")}(e.target.innerHTML)}),I.addEventListener("click",function(t){"INPUT"===t.target.tagName&&(!0!==e.currentUserAgent?H(t.target.dataset.nameField,t):H(t.target.getAttribute("data-name-field"),t))})}},{key:"getDataUser",value:function(){this.currentUserAgent?function(){try{var e=new XMLHttpRequest;e.open("GET",this.url,!1),e.send(),this.parseDataUsers(JSON.parse(e.responseText).results)}catch(e){T.call(this,e)}}.call(this):function(){var e=this,t=new Request(this.url,{method:"GET",headers:new Headers,mode:"cors",cache:"default"});fetch(t).then(function(e){if(200===e.status)return e.json();throw new Error("Response status not 200!")}).then(function(t){e.parseDataUsers(t.results)}).catch(function(t){T.call(e,t)})}.call(this)}},{key:"parseDataUsers",value:function(e){var t={},n=[],r=[];e.forEach(function(e,a){0===a?(t={picture:e.picture.large,fullName:"".concat(e.name.first," ").concat(e.name.last),city:"".concat(e.location.city),info:{family:"male"===e.gender?"Холост":"Married",phone:e.phone,email:e.email}},n=["cat","car","music","sport"],localStorage.setItem("hobby",JSON.stringify(n)),localStorage.setItem("profile",JSON.stringify(t))):r.push({picture:e.picture.medium,fullName:"".concat(e.name.first," ").concat(e.name.last),city:"".concat(e.location.city),status:"male"===e.gender?"online":""})}),localStorage.setItem("friends",JSON.stringify(r)),this.renderDataUsers(t,n,r)}},{key:"renderDataUsers",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:g,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],r=sessionStorage.getItem("tabId");w(r),s.src=e.picture,s.title=s.alt=e.fullName,l.value=e.fullName,u.value=e.city,f.value=e.info.family,d.value=e.info.phone,m.value=e.info.email,y.innerHTML="",t.forEach(function(e){U(e,"after")}),n.forEach(function(e){var t=document.createElement("div");t.className="friendUser",t.innerHTML='\n                <img src="'.concat(e.picture,'" alt="').concat(e.fullName,'" src="').concat(e.fullName,'">\n                <div class="infoFriend">\n                     <div class="mainInfoFriend">\n                         <a href="').concat(e.picture,'" class="fullNameFriend">').concat(e.fullName,'</a>\n                         <span class="cityFriend">c. ').concat(e.city,'</span>\n                     </div>\n                     <span class="friendStatus">').concat(e.status,"</span>\n                </div>\n            "),p.appendChild(t)}),setTimeout(function(){a.classList.remove("filter"),v.style.display=h.style.display="none"},1e3)}},{key:"userProfile",get:function(){return 0!==this._state.length?[JSON.parse(this._state.getItem("profile")),JSON.parse(this._state.getItem("hobby")),JSON.parse(this._state.getItem("friends"))]:null}}])&&M(t.prototype,n),r&&M(t,r),e}())(localStorage,"https://api.randomuser.me/1.0/?results=21&nat=gb,us&inc=gender,name,location,email,phone,picture",r).init()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,